import{j as s,b as i,c as a,a9 as t}from"./chunks/framework.gTVU9YHx.js";const c=JSON.parse('{"title":"git解决push报错","description":"","frontmatter":{"title":"git解决push报错","date":"2017-04-22T18:04:30.000Z","tags":["git"],"categories":["知识库"]},"headers":[],"relativePath":"technology/other/git-解决push报错.md","filePath":"technology/other/git-解决push报错.md","lastUpdated":1684394809000}'),n={name:"technology/other/git-解决push报错.md"},h=t(`<h1 id="git-解决push报错问题" tabindex="-1">git -解决push报错问题 <a class="header-anchor" href="#git-解决push报错问题" aria-label="Permalink to &quot;git -解决push报错问题&quot;">​</a></h1><h3 id="问题出现场景" tabindex="-1">问题出现场景 <a class="header-anchor" href="#问题出现场景" aria-label="Permalink to &quot;问题出现场景&quot;">​</a></h3><p>github新建仓库,想把本地仓库推送到github</p><hr><p>操作步骤</p><ol><li><p>进入本地仓库,假设项目为test</p><p><code>cd test</code></p><p><code>git init</code></p></li><li><p>查看状态</p><p><code>git status</code></p></li><li><p>把更改的文件添加到本地git仓库</p><p><code>git add .</code></p></li><li><p>设置用户名邮箱</p><p><code>git config --global user.name &#39;jimi&#39;</code></p><p><code>git config --global user.email &#39;jimi@163.com</code></p></li><li><p>提交</p><p><code>git commit -m &quot;first commit&quot;</code></p></li><li><p>把本地test项目和githhub的test项目进行关联</p><p><code>git remote add origin xxxxx@xxxx</code></p></li><li><p>向远程仓库提交代码(配置好ssh或者密码)</p><p><code>git push origin master</code></p><p>可能会出现问题:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">To</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com:JasonLi-cn/test.git</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [rejected]        </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (fetch </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> some</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> refs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;git@github.com:JasonLi-cn/test.git&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hint:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Updates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> were</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rejected</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> because</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contains</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> work</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> that</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hint:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> have</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> locally.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usually</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> caused</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> another</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pushing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hint:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> same</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ref.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> You</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> may</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> want</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> first</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> integrate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hint:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e.g., </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;git pull ...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) before pushing again.  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hint:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> See</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Note about fast-forwards&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;git push --help&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> details.</span></span></code></pre></div><p>说明远程仓库有本地仓库没有的文件,需要先pull</p><p><code>git pull origin master</code></p><p>这时可能会遇到问题:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ git pull origin master  </span></span>
<span class="line"><span>From github.com:JasonLi-cn/test  </span></span>
<span class="line"><span> * branch            master     -&gt; FETCH_HEAD  </span></span>
<span class="line"><span>fatal: refusing to merge unrelated histories</span></span></code></pre></div><p>解决办法:</p><p><code>git pull origin master --allow-unrelated-histories</code></p><p>这时就可以push了.</p><p>如果远程仓库有和本地仓库一样的文件还不能直接push,git status发现:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>On branch master</span></span>
<span class="line"><span>You have unmerged paths.</span></span>
<span class="line"><span>  (fix conflicts and run &quot;git commit&quot;)</span></span>
<span class="line"><span>  (use &quot;git merge --abort&quot; to abort the merge)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Unmerged paths:</span></span>
<span class="line"><span>  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	both added:      LICENSE</span></span></code></pre></div><p>只需要执行如下操作然后重新提交就行了</p><div class="language-Shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LICENSE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;merge&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div></li></ol><hr><p>最好推荐几篇写的非常不错的git入门文章:</p><p><a href="http://stormzhang.com/github/2016/05/25/learn-github-from-zero1/" target="_blank" rel="noreferrer">从0开始学习 GitHub 系列之「初识 GitHub」</a></p><p><a href="http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/" target="_blank" rel="noreferrer">从0开始学习 GitHub 系列之「加入 GitHub」</a></p><p><a href="http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/" target="_blank" rel="noreferrer">从0开始学习 GitHub 系列之「Git 速成」</a></p><p><a href="http://stormzhang.com/github/2016/06/04/learn-github-from-zero4/" target="_blank" rel="noreferrer">从0开始学习 GitHub 系列之「向GitHub 提交代码」</a></p><p><a href="http://stormzhang.com/github/2016/06/16/learn-github-from-zero5/" target="_blank" rel="noreferrer">从0开始学习 GitHub 系列之「Git 进阶」</a></p><p><a href="http://stormzhang.com/github/2016/07/09/learn-from-github-from-zero6/" target="_blank" rel="noreferrer">从0开始学习 GitHub 系列之「团队合作利器 BRANCH」</a></p><p><a href="http://stormzhang.com/github/2016/07/28/learn-github-from-zero7/" target="_blank" rel="noreferrer">从0开始学习 GitHub 系列之「如何发现优秀的开源项目？」</a></p>`,15),p=[h];function e(l,k,r,F,g,o){return i(),a("div",null,p)}const E=s(n,[["render",e]]);export{c as __pageData,E as default};
